"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.optionsDocs = void 0;
const fetch_1 = __importDefault(require("../fetch"));
const utils_1 = require("../utils");
exports.optionsDocs = [
    ['raw', '`boolean`', false, '`false`', 'Include raw API response'],
    ['locale', '`string`', false, '`\'en-us\'`', ''],
    ['fallbackLocale', '`string`', false, '`\'en-us\'`', '']
];
exports.default = async (id, options) => {
    const raw = options && options.raw || false;
    const locale = options && options.locale || 'en-us';
    const fallbackLocale = options && options.fallbackLocale || 'en-us';
    const res = await fetch_1.default(utils_1.getURL.NEWSBYID(id, locale, fallbackLocale))();
    return ({
        ...raw && { raw: res },
        total: res.total,
        limit: res.limit,
        categories: res.categoriesFilter,
        media: res.mediaFilter,
        skip: res.skip,
        startIndex: res.startIndex,
        placement: res.placementFilter,
        tags: res.tags,
        ...res.items && {
            item: {
                id: res.items.id,
                title: res.items.title,
                abstract: res.items.abstract,
                thumbnail: {
                    url: res.items.thumbnail.url, description: res.items.thumbnail.description
                },
                content: res.items.content,
                description: res.items.description,
                categories: res.items.categories,
                tag: res.items.tag,
                placement: res.items.placement,
                type: res.items.type,
                readTime: res.items.readTime,
                url: utils_1.getNewsURL(locale, res.items.type, res.items.button.buttonUrl),
                date: res.items.date
            }
        }
    });
};
//# sourceMappingURL=getNewsById.js.map